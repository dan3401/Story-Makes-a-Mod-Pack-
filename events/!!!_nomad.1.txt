namespace = nomad

country_event = {
	id = nomad.1
	hide_window = yes #DEBUG TO NO TO SEE WHERE THE NOMADS SPAWN
	location = event_target:nomad_spawn
	is_triggered_only = yes

	trigger = {
		#has_megacorp = no # nomads can't compete with caravaneers (YOUR NOT THE BOSS OF ME, PARADOX)
		NOT = { exists = event_target:nomad01_country }
	}

	immediate = {
		random_rim_system = {
			limit = {
				NOR = {
					any_playable_country = {
						intel_level = {
							level > low
							system = prev
						}
					}
					has_star_flag = hostile_system
				}
			}
			random_system = {
				limit = {
					NOT = { 
						has_star_flag = hostile_system 
					}
					distance = {
						source = PREV
						min_distance >= 250 #5
						max_distance <= 500 #50
					}
				}
				set_star_flag = nomad_mid_point
			}
			if = {
				limit = {
					NOT = {
						any_system = {
							has_star_flag = nomad_mid_point
						}
					}
				}
				random_system = {
					limit = {
						distance = {
							source = PREV
							min_distance >= 150
							max_distance <= 500
						}
					}
					set_star_flag = nomad_mid_point
				}
			}
			random_rim_system = {
				limit = {
					distance = {
						source = PREV
						min_distance >= 400 #50
						#Distance trigger distances are squared and stored in CFixedPoint which will overflow at values larger than +-2^31/1000 ~= +-2147483
						#Largest value for a distance trigger distance is therefore sqrt(2147483) ~= +-1465
						max_distance <= 1450 #9999 #100
					}
				}
				set_star_flag = nomad_end_point
			}
			if = {
				limit = {
					NOT = {
						any_system = {
							has_star_flag = nomad_end_point
						}
					}
				}
				random_rim_system = {
					limit = {
						distance = {
							source = PREV
							min_distance >= 250
							#Distance trigger distances are squared and stored in CFixedPoint which will overflow at values larger than +-2^31/1000 ~= +-2147483
							#Largest value for a distance trigger distance is therefore sqrt(2147483) ~= +-1465
							max_distance <= 1450 #9999
						}
					}
					set_star_flag = nomad_end_point
				}
			}
			create_species = {
				name = NAME_Namarian
				plural = "NAME_Namarians"
				adjective = "NAME_Namarian"
				class = AVI
				portrait = random
				traits = {
					trait = "trait_nomadic"
					trait = "trait_venerable"
					trait = "trait_natural_engineers"
					trait = "trait_pc_desert_preference"
				}
				immortal = yes
			}
			last_created_species = {
				save_global_event_target_as = base_namarian
			}
			create_country = {
				name = "NAME_Galactic_Nomads"
				type = nomad
				species = last_created
				flag = {
					icon = {
						category = "spherical"
						file = "flag_spherical_8.dds"
					}
					background= {
						category = "backgrounds"
						file = "circle.dds"
					}
					colors={
						"purple"
						"indigo"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				set_country_flag = nomad01_country_flag
				save_global_event_target_as = nomad01_country
				add_modifier = {
					modifier = nomad_strength
					days = -1
				}
			}
			random_system_planet = {
				set_planet_flag = nomad_starting_point
				save_event_target_as = nomad_spawn
			}
			event_target:nomad01_country = {
				create_leader = {
					class = admiral
					species = owner_main_species
					name = random
					skill = 2
				}
				create_fleet = {
					name = "NAME_Nomadic_Armada"
					effect = {
						set_owner = PREV
						set_fleet_flag = nomad_main_fleet
						set_fleet_stance = passive
						set_aggro_range_measure_from = self
						set_aggro_range = 50
						while = {
							count = 15
							create_ship = {
								name = "NAME_Defender"
								design = NAME_Defender
							}
						}
						while = {
							#count = 6
							count = 40
							create_ship = {
								name = "NAME_Protector"
								design = NAME_Protector
							}
						}
						create_ship = {
							name = "NAME_Home_One"
							design = NAME_Diaspora
						}
						create_ship = {
							name = "NAME_Home_Two"
							design = NAME_Diaspora
						}
						create_ship = {
							name = "NAME_Home_Three"
							design = NAME_Diaspora
						}
						create_ship = {
							name = "NAME_Home_Four"
							design = Diaspora
						}
						create_ship = {
							name = "NAME_Home_Five"
							design = Diaspora
						}
						assign_leader = last_created_leader
						set_location = event_target:nomad_spawn
						set_fleet_flag = nomad_fleet
						set_formation_scale = 1.6
						fleet_event = { id = nomad.2 days = 1 } #Nomads fly towards current destination
						save_event_target_as = CustomCapital
						prev = {
							set_custom_capital_location = event_target:CustomCapital
						}
					}
				}
			}
		}
	}
}