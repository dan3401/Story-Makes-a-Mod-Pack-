planet_with_too_many_moons_system = {
    class = "rl_standard_stars"
    asteroid_belt = {
        type = rocky_asteroid_belt
        radius = 125
    }
    usage = misc_system_init
    usage_odds = {
        base = 0
        modifier = {
            add = 200
            any_country = {
                has_country_flag = fallen_empire_4
            }
            NOT = {
                has_star_flag = empire_cluster
            }
            NOT = {
                is_in_cluster = fe4_cluster
            }
            any_neighbor_system = {
                is_in_cluster = fe4_cluster
            }
        }
    }
    max_instances = 1
    spawn_chance = 9999
    flags = {
        planet_with_too_many_moons_system
    }
    planet = {
        count = 1
        class = star
        orbit_distance = 0
        orbit_angle = 1
        size = {
            min = @standard_min
            max = @standard_max
        }
        has_ring = no
        init_effect = {
            save_event_target_as = too_many_moons_system_star
            create_ambient_object = {
                type = "abandoned_starbase_01_object"
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 15
                    angle = random
                }
            }
            create_ambient_object = {
                type = "large_debris_object"
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 35
                    angle = random
                }
            }
            create_ambient_object = {
                type = "ancient_battlefield_02_object"
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 90
                    angle = random
                }
            }
            create_ambient_object = {
                type = "large_debris_object"
                location = this
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 100
                    angle = random
                }
            }
            while = {
                count = 2
                create_ambient_object = {
                    type = "large_debris_object"
                    location = this
                }
                last_created_ambient_object = {
                    set_location = {
                        target = prev
                        distance = 250
                        angle = random
                    }
                }
            }
            while = {
                count = 4
                create_ambient_object = {
                    type = "medium_debris_01_object"
                    location = this
                }
                last_created_ambient_object = {
                    set_location = {
                        target = prev
                        distance = 190
                        angle = random
                    }
                }
            }
            while = {
                count = 3
                create_ambient_object = {
                    type = "small_debris_object"
                    location = this
                }
                last_created_ambient_object = {
                    set_location = {
                        target = prev
                        distance = 150
                        angle = random
                    }
                }
            }
        }
    }
    planet = {
        orbit_distance = 70
        class = pc_shattered
        orbit_angle = 50
        size = 25
        name = "Darad"
        init_effect = {
            prevent_anomaly = yes
            clear_deposits = yes
            add_deposit = d_minerals_4
        }
    }
    planet = {
        orbit_distance = 0
        orbit_angle = 180
        size = 25
        class = pc_nuked
        has_ring = yes
        name = "Shallash"
        change_orbit = @base_moon_distance
        moon = {
            orbit_angle = 0
            orbit_distance = 6
            size = {
                min = 10
                max = 16
            }
            class = pc_shattered_2
            init_effect = {
                prevent_anomaly = yes
            }
        }
        moon = {
            orbit_angle = 60
            orbit_distance = 0
            size = {
                min = 12
                max = 16
            }
            class = pc_molten
            init_effect = {
                prevent_anomaly = yes
            }
        }
        moon = {
            orbit_angle = 60
            orbit_distance = 0
            size = {
                min = 10
                max = 16
            }
            class = pc_barren
            init_effect = {
                prevent_anomaly = yes
            }
        }
        moon = {
            orbit_angle = 60
            orbit_distance = 0
            size = {
                min = 10
                max = 16
            }
            class = pc_barren_cold
            init_effect = {
                prevent_anomaly = yes
            }
        }
        moon = {
            orbit_angle = 60
            orbit_distance = 0
            size = {
                min = 10
                max = 16
            }
            class = pc_frozen
            init_effect = {
                prevent_anomaly = yes
            }
        }
        moon = {
            orbit_angle = 60
            orbit_distance = 0
            size = {
                min = 10
                max = 16
            }
            class = pc_toxic
            init_effect = {
                prevent_anomaly = yes
            }
        }
        init_effect = {
            prevent_anomaly = yes
            set_planet_flag = planet_with_too_many_moons
            create_ambient_object = {
                type = "ancient_battlefield_02_object"
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 5
                    direction = in_system
                }
            }
            create_archaeological_site = site_ruins_of_shallash
        }
    }
    change_orbit = 55
    planet = {
        count = 4
        class = pc_asteroid
        orbit_distance = 0
        orbit_angle = {
            min = 15
            max = 345
        }
        init_effect = {
            prevent_anomaly = yes
            random_list = {
                4 = {
                }
                2 = {
                    clear_deposits = yes
                    set_deposit = d_minerals_3
                }
                2 = {
                    clear_deposits = yes
                    set_deposit = d_minerals_4
                }
                1 = {
                    clear_deposits = yes
                    set_deposit = d_minerals_5
                }
                1 = {
                    clear_deposits = yes
                    set_deposit = d_volatile_motes_2
                }
            }
        }
    }
    change_orbit = 25
    planet = {
        count = 1
        class = pc_gas_giant
        orbit_distance = {
            min = 40
            max = 50
        }
        orbit_angle = {
            min = 35
            max = 325
        }
    }
    planet = {
        count = 1
        class = pc_gas_giant
        orbit_distance = {
            min = 50
            max = 60
        }
        orbit_angle = {
            min = 35
            max = 325
        }
    }
    planet = {
        count = 1
        class = pc_gas_giant
        orbit_distance = {
            min = 60
            max = 70
        }
        orbit_angle = {
            min = 35
            max = 325
        }
    }
    init_effect = {
        random_system_planet = {
            limit = {
                has_planet_flag = planet_with_too_many_moons
            }
            save_event_target_as = too_many_moons_planet_1
        }
        random_system_planet = {
            limit = {
                is_star = no
                is_asteroid = no
                is_moon = no
                NOT = {
                    is_same_value = event_target:too_many_moons_planet_1
                }
            }
            save_event_target_as = too_many_moons_planet_2
        }
        random_system_planet = {
            limit = {
                is_star = no
                is_asteroid = no
                is_moon = no
                NOR = {
                    is_same_value = event_target:too_many_moons_planet_1
                    is_same_value = event_target:too_many_moons_planet_2
                }
            }
            save_event_target_as = too_many_moons_planet_3
        }
        random_system_planet = {
            limit = {
                is_star = yes
                NOR = {
                    is_same_value = event_target:too_many_moons_planet_1
                    is_same_value = event_target:too_many_moons_planet_2
                    is_same_value = event_target:too_many_moons_planet_3
                }
            }
            save_event_target_as = too_many_moons_planet_4
        }
        create_country = {
            name = "NAME_Warder_of_the_Ruins"
            type = faction
            flag = {
                icon = {
                    category = "pointy"
                    file = "flag_pointy_21.dds"
                }
                background = {
                    category = "backgrounds"
                    file = "00_solid.dds"
                }
                colors = {
                    "black"
                    "black"
                    "null"
                    "null"
                }
            }
        }
        last_created_country = {
            set_graphical_culture = fallen_empire_04
            if = {
                limit = {
                    NOT = {
                        has_modifier = ancient_warden_boost
                    }
                }
                add_modifier = {
                    modifier = ancient_warden_boost
                    days = -1
                }
            }
            save_global_event_target_as = ancient_warden_country
        }
        event_target:ancient_warden_country = {
            create_fleet = {
                name = "NAME_Warder_of_the_Ruins"
                settings = {
                    spawn_debris = no
                }
                effect = {
                    set_owner = event_target:ancient_warden_country
                    create_ship = {
                        name = "NAME_Warder_of_the_Ruins"
                        design = "NAME_Warder_of_the_Ruins"
                    }
                    set_location = {
                        target = event_target:too_many_moons_system_star
                        distance = 20
                        angle = random
                    }
                    set_fleet_flag = too_many_moons_warder
                    set_fleet_stance = aggressive
                    set_aggro_range_measure_from = self
                    set_aggro_range = 100
                    queue_actions = {
                        repeat = {
                            find_closest_planet = {
                                trigger = {
                                    id = "ruinswarder.1.trigger.1"
                                    is_planet = event_target:too_many_moons_planet_1
                                }
                                found_planet = {
                                    move_to = this
                                    orbit_planet = THIS
                                }
                            }
                            find_closest_planet = {
                                trigger = {
                                    id = "ruinswarder.1.trigger.2"
                                    is_planet = event_target:too_many_moons_planet_2
                                }
                                found_planet = {
                                    move_to = this
                                    orbit_planet = THIS
                                }
                            }
                            find_closest_planet = {
                                trigger = {
                                    id = "ruinswarder.1.trigger.3"
                                    is_planet = event_target:too_many_moons_planet_3
                                }
                                found_planet = {
                                    move_to = this
                                    orbit_planet = THIS
                                }
                            }
                            find_closest_planet = {
                                trigger = {
                                    id = "ruinswarder.1.trigger.4"
                                    is_planet = event_target:too_many_moons_planet_4
                                }
                                found_planet = {
                                    move_to = this
                                    orbit_planet = THIS
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
