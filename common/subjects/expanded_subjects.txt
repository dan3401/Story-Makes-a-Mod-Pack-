#
# can_expand = allowed to build outposts to expand borders
# potential = if possible to select in diplomatic interactions
# become_vassal = trigger when it converts into a vassal
# tech_cost_mult = tech cost multiplier if overlord has a tech
# overlord_resources = resources cost, upkeep and production paid by and to the overlord
# subject_resources = resources cost, upkeep and production paid by and to the subject
# joins_overlord_wars = Joins in if overlord goes to war (Defensive or Offensive)
# calls_overlord_to_war Calls overlord to war (Defensive only)
# can_do_diplomacy Can do some limited diplomacy
# overlord_becomes_warleader, if overlord takes over as warleader. Default true
# gets_sensor(yes): gets overlords sensors
# gets_access(yes): gets overlords access
# can_be_integrated(no): the overlord is able to integrate the subject
# can_switch_to: a list of other subject types this type can switch to.
# diplo_threat: threat generated from diplomatically vassalizing this type of subject
# effect: executes when subject relation is created

@protectorate_tech_threshold = 0.5
@protectorate_tech_switch = 0.5

duchy = {
	can_expand = yes
	can_be_integrated = no
	
	research_agreement = yes
	research_sharing = yes	# for tech sharing modifier

	joins_overlord_wars = yes
	calls_overlord_to_war = yes
	can_do_diplomacy = yes
	
	overlord_resources = {
		category = subjects
		produces = {
			influence = 0.25
		}
	}
	
	subject_tax_rate = {
		minerals = 0.1
		energy = 0.1
	}
	
	diplo_threat = 1.5

	potential = {	
		from = {
			is_country_type = default
			has_valid_civic = civic_feudal_realm
		}
	}
	
	effect = {
		if = {
			limit = {
				from = { 	
					is_country_type_with_subjects = no
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}		
		if = {
			limit = {
				from = { has_valid_civic = civic_inwards_perfection }
			}
			set_subject_of = {
				who = from
				subject_type = tributary
			}
			break = yes
		}
		if = {
			limit = {
				from = {
					NOT = { has_valid_civic = civic_feudal_realm }
					NOT = { is_megacorp = yes }
				}
				is_megacorp = yes
			}
			set_subject_of = {
				who = from
				subject_type = charter
			}
			break = yes
		}
		if = {
			limit = {
				from = { 	
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}			
		if = {
			limit = {
				NOT = { is_same_species = from }
				from = { 
					has_valid_civic = civic_fanatic_purifiers
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}		
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
			}
			set_subject_of = {
				who = from
				subject_type = satellite
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_spiritualist
				}
			}
			set_subject_of = {
				who = from
				subject_type = dominion
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophile
				}
			}
			set_subject_of = {
				who = from
				subject_type = signatory
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			set_subject_of = {
				who = from
				subject_type = thrall
			}
			break = yes
		}
		if = {
			limit = {
				from = { is_megacorp = yes }
			}
			set_subject_of = {
				who = from
				subject_type = subsidiary
			}
			break = yes
		}
	}	
}

charter = {
	can_expand = no
	can_be_integrated = no
	
	research_agreement = yes
	research_sharing = yes	# for tech sharing modifier

	joins_overlord_wars = yes
	calls_overlord_to_war = yes
	can_do_diplomacy = yes
	
	diplo_threat = 1.5
	
	subject_tax_rate = {
		energy = 0.25
		consumer_goods = 0.1
	}

	potential = {	
		from = {
			is_country_type = default
			NOT = { has_valid_civic = civic_feudal_realm }
			NOT = { is_megacorp = yes }
		}
		is_megacorp = yes
	}
	
	effect = {
		country_event = { id = civicsexpanded.34 days = 1 }
		if = {
			limit = {
				from = { 	
					is_country_type_with_subjects = no
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}		
		if = {
			limit = {
				from = { has_valid_civic = civic_inwards_perfection }
			}
			set_subject_of = {
				who = from
				subject_type = tributary
			}
			break = yes
		}
		if = {
			limit = {
				from = { has_valid_civic = civic_feudal_realm }
			}
			set_subject_of = {
				who = from
				subject_type = duchy
			}
			break = yes
		}
		if = {
			limit = {
				from = { 	
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}			
		if = {
			limit = {
				NOT = { is_same_species = from }
				from = { 
					has_valid_civic = civic_fanatic_purifiers
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}		
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
			}
			set_subject_of = {
				who = from
				subject_type = satellite
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_spiritualist
				}
			}
			set_subject_of = {
				who = from
				subject_type = dominion
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophile
				}
			}
			set_subject_of = {
				who = from
				subject_type = signatory
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			set_subject_of = {
				who = from
				subject_type = thrall
			}
			break = yes
		}
		if = {
			limit = {
				from = { is_megacorp = yes }
			}
			set_subject_of = {
				who = from
				subject_type = subsidiary
			}
			break = yes
		}
		if = {
			limit = {
				OR = {
					from = { is_megacorp = yes }
					from = { has_valid_civic = civic_feudal_realm }
					NOT = { is_megacorp = yes }
				}
			}
			set_subject_of = {
				who = from
				subject_type = vassal
			}
			break = yes
		}
	}	
}

# Origin: Scion
scion_dominion = {
	can_expand = yes
	can_be_integrated = no
	joins_overlord_wars = yes
	calls_overlord_to_war = no
	can_do_diplomacy = yes
	gets_sensor = no
	
	diplo_threat = 0.75
	
	subject_tax_rate = {
		minerals = 0.10
		energy = 0.10
	}

	potential = {
		has_origin = origin_scion
		from = {
			has_country_flag = scion_master
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_ethic = ethic_fanatic_spiritualist
		}
	}
	
	effect = {
	}	
}

scion_satellite = {
	can_expand = yes
	can_be_integrated = no
	joins_overlord_wars = yes
	calls_overlord_to_war = no
	can_do_diplomacy = yes
	gets_sensor = no
	
	diplo_threat = 0.75
	
	subject_tax_rate = {
		physics_research = 0.15
		society_research = 0.15
		engineering_research = 0.15
	}

	potential = {
		has_origin = origin_scion
		from = {
			has_country_flag = scion_master
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_ethic = ethic_fanatic_materialist
		}
	}
	
	effect = {
	}	
}

scion_signatory = {
	can_expand = yes
	can_be_integrated = no
	joins_overlord_wars = no
	calls_overlord_to_war = yes
	can_do_diplomacy = yes
	gets_sensor = no
	
	diplo_threat = 0.75
	
	potential = {
		has_origin = origin_scion
		from = {
			has_country_flag = scion_master
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_ethic = ethic_fanatic_xenophile
		}
	}
	
	effect = {
	}	
}

scion_auxiliary = {
	can_expand = yes
	can_be_integrated = no
	joins_overlord_wars = yes
	calls_overlord_to_war = no
	can_do_diplomacy = yes
	gets_sensor = no
	
	diplo_threat = 0.75
	
	potential = {
		has_origin = origin_scion
		from = {
			has_country_flag = scion_master
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_authority = auth_machine_intelligence
		}
	}
	
	effect = {
	}	
}